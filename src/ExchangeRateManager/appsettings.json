{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Hangfire": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",

  //Defines how keyed services will be resolved into the application.
  "KeyedServices": {

    //"AlphaVantageForexClient" : The actual service api
    //"ForexClientStub"         : A local stub that will return successful random data.
    "ExchangeRateManager.ApiClients.Interfaces.IForexClient": "ExchangeRateManager.ApiClients.AlphaVantageForexClient",

    //"RabbitMessageQueueService" : The actual service that enqueues a message to rabbitMQ server.
    //"MessageQueueStubService" : A local stub that logs the message.
    "ExchangeRateManager.Services.Interfaces.IMessageQueueService": "ExchangeRateManager.Services.RabbitMessageQueueService"
  },

  //Http clients default settings
  "HttpClients": {
    "ExchangeRateManager.ApiClients.AlphaVantageForexClient": {
      "BaseAddress": "https://www.alphavantage.co/query",
      "QueryParams": "apikey=${apha-vantage-api-key}"
    }
  },

  //Data access connection strings
  "ConnectionStrings": {
    "DefaultConnection": "Server=${exchangeRate-db-host};Port=5432;Database=${exchangeRate-db};User Id=${exchangeRate-db-User};Password=${exchangeRate-db-Pass};",
    "HangfireConnection": "Server=${exchangeRate-db-host};Port=5432;Database=${exchangeRate-hangfire-db};User Id=${exchangeRate-db-User};Password=${exchangeRate-db-Pass};",
    "CacheConnection": "${exchangeRate-cache-host}:6379,password=${exchangeRate-cache-pass}",
    "MessageQueue": "amqp://${exchangeRate-mq-user}:${exchangeRate-mq-pass}@${exchangeRate-mq-host}/{exchangeRate-mq-vhost}"
  },

  //Caching settings
  // "Redis": Use an external Redis or Valkey cache (both use same interface)
  // "Memory": Use built-in memory cache
  // "Disabled": Cache is disabled
  "Cache": "Redis",

  //Exchange Rate service settings
  "ExchangeRate": {

    // True: Prefer realtime data, falls back into stored data when limit is reached.
    // False: Prefer stored data, expires periodically
    "PreferLiveData": false,

    // Only used if 'PreferLiveData' is unset or set to false.
    // How many minutes will pass before requesting a new version.
    "DataExpiresMinutes": 5
  },

  // If enabled it will automatically run the migrations at startup. (First time needed for Hangfire)
  "RunMigrationsAtStartup": true
}
