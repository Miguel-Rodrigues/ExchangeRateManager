// <auto-generated />
using System;
using ExchangeRateManager.Repositories.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExchangeRateManager.Repositories.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExchangeRateManager.Repositories.Entities.ForexRateEntity", b =>
                {
                    b.Property<string>("FromCurrencyCode")
                        .HasColumnType("text")
                        .HasColumnOrder(0);

                    b.Property<string>("ToCurrencyCode")
                        .HasColumnType("text")
                        .HasColumnOrder(1);

                    b.Property<decimal>("AskPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("BidPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("numeric");

                    b.Property<string>("FromCurrencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastRefreshed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ToCurrencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FromCurrencyCode", "ToCurrencyCode");

                    b.ToTable("ForexRates");
                });
#pragma warning restore 612, 618
        }
    }
}
